@model BookBorrowing.DATA.Models.Client

﻿@{
    ViewData["Title"] = "Home Page";
}


<div class="main border border-primary gradient-border" id="box">


    <div class="inner text-center">
        <br></br>
        <h1 class="fw-light">Bem Vindo!</h1>
        <h3 class="text-white text-center fw-light">O BookBorrowing é de uso livre de Bibliotecas e Livrarias!</h3>
    </div>

    <div>
        <svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
             viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto">
            <defs>
                <path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
            </defs>
            <g class="parallax">
                <use xlink:href="#gentle-wave" x="48" y="0" fill="rgba(255,255,255,0.7" />
                <use xlink:href="#gentle-wave" x="48" y="3" fill="rgba(255,255,255,0.5)" />
                <use xlink:href="#gentle-wave" x="48" y="5" fill="rgba(255,255,255,0.3)" />
                <use xlink:href="#gentle-wave" x="48" y="7" fill="#fff" />
            </g>
        </svg>
    </div>
    <div class="content flex">
        <h3 class="space"><a href="https://www.linkedin.com/in/lu%C3%ADs-eduardo-spindola-64ba12223/">Developer</a> | <a href="https://github.com/LuisEduardoSpindola">GitHub</a></h3>
    </div>

</div>




<style>
    body {
        margin: 0;
    }

    h1 {
        font-family: 'Lato', sans-serif;
        font-weight: 300;
        letter-spacing: 2px;
        font-size: 48px;
    }

    p {
        font-family: 'Lato', sans-serif;
        letter-spacing: 1px;
        font-size: 14px;
        color: #333333;
    }

    .space {
        color: #649ebe;
    }

    .main {
        position: relative;
        text-align: center;
        background: linear-gradient(60deg, rgba(84,58,183,1) 0%, rgb(39, 4, 136) 100%);
        color: white;
        width: 100%;
    }

    .logo {
        width: 50px;
        fill: white;
        padding-right: 15px;
        display: inline-block;
        vertical-align: middle;
    }

    .inner {
        height: 50vh;
        width: 100%;
        margin: 0;
        padding: 0;
    }

    .flex { /*Flexbox for containers*/
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    .waves {
        position: relative;
        width: 100%;
        height: 20vh;
        margin-bottom: -7px; /*Fix for safari gap*/
        min-height: 100px;
        max-height: 150px;
    }

    .content {
        position: relative;
        height: 15vh;
        text-align: center;
        background-color: white;
    }

    /* Animation */

    .parallax > use {
        animation: move-forever 25s cubic-bezier(.55,.5,.45,.5) infinite;
    }

        .parallax > use:nth-child(1) {
            animation-delay: -2s;
            animation-duration: 7s;
        }

        .parallax > use:nth-child(2) {
            animation-delay: -3s;
            animation-duration: 10s;
        }

        .parallax > use:nth-child(3) {
            animation-delay: -4s;
            animation-duration: 13s;
        }

        .parallax > use:nth-child(4) {
            animation-delay: -5s;
            animation-duration: 20s;
        }

    @@keyframes move-forever {
        0% {
            transform: translate3d(-90px,0,0);
        }

        100% {
            transform: translate3d(85px,0,0);
        }
    }
    /*Shrinking for mobile*/
    media (max-width: 768px) {
        .waves

    {
        height: 40px;
        min-height: 40px;
    }

    .content {
        height: 40vh;
    }

    h1 {
        font-size: 24px;
    }

    }


    /*Card*/


    .gradient-border {
        --borderWidth: 3px;
        position: relative;
        border-radius: var(--borderWidth);
    }

        .gradient-border:after {
            content: '';
            position: absolute;
            top: calc(-1 * var(--borderWidth));
            left: calc(-1 * var(--borderWidth));
            height: calc(100% + var(--borderWidth) * 2);
            width: calc(100% + var(--borderWidth) * 2);
            background: linear-gradient(60deg, #7eb5d6, #649ebe, #4a87a6, #2f708e, #155976, #1098ad, #07b39b, #2f708e);
            border-radius: calc(2 * var(--borderWidth));
            z-index: -1;
            animation: animatedgradient 3s ease alternate infinite;
            background-size: 300% 300%;
        }


    @@keyframes animatedgradient {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

</style>